
keypad aand lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000091e  00000992  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000091e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000009ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000019c9  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aa7  00000000  00000000  00002489  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d2c  00000000  00000000  00002f30  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  00003c5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000539  00000000  00000000  00003d58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cd0  00000000  00000000  00004291  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00004f61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e1       	ldi	r30, 0x1E	; 30
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 31       	cpi	r26, 0x1C	; 28
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	55 d0       	rcall	.+170    	; 0x15e <main>
  b4:	32 c4       	rjmp	.+2148   	; 0x91a <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <enable>:
	lcdCmd(INCREAMENT_CURSOR);
	lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
	_delay_ms(2);
}
void enable(){
	PORTB |= (1 << EN);
  b8:	88 b3       	in	r24, 0x18	; 24
  ba:	82 60       	ori	r24, 0x02	; 2
  bc:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	83 ec       	ldi	r24, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <enable+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <enable+0x10>
  c8:	00 00       	nop
	_delay_ms(10);
	PORTB &= ~(1 << EN);
  ca:	88 b3       	in	r24, 0x18	; 24
  cc:	8d 7f       	andi	r24, 0xFD	; 253
  ce:	88 bb       	out	0x18, r24	; 24
  d0:	83 ec       	ldi	r24, 0xC3	; 195
  d2:	99 e0       	ldi	r25, 0x09	; 9
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <enable+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <enable+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <lcdCmd>:
	_delay_ms(10);
}
void lcdCmd(char u8Cmd)
{
	PORTB &= ~(1 << RS);
  de:	98 b3       	in	r25, 0x18	; 24
  e0:	9e 7f       	andi	r25, 0xFE	; 254
  e2:	98 bb       	out	0x18, r25	; 24
	PORTA = u8Cmd;
  e4:	8b bb       	out	0x1b, r24	; 27
	enable();
  e6:	e8 cf       	rjmp	.-48     	; 0xb8 <enable>
  e8:	08 95       	ret

000000ea <lcdInit>:
#include <avr/io.h>
#define F_CPU 1000000UL
#include "util/delay.h"
void lcdInit()
{
	DDRA = 0xFF;
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	8a bb       	out	0x1a, r24	; 26
	DDRB |= (1 << RS);
  ee:	87 b3       	in	r24, 0x17	; 23
  f0:	81 60       	ori	r24, 0x01	; 1
  f2:	87 bb       	out	0x17, r24	; 23
	DDRB |= (1 << EN);
  f4:	87 b3       	in	r24, 0x17	; 23
  f6:	82 60       	ori	r24, 0x02	; 2
  f8:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~(1 << EN);
  fa:	88 b3       	in	r24, 0x18	; 24
  fc:	8d 7f       	andi	r24, 0xFD	; 253
  fe:	88 bb       	out	0x18, r24	; 24
	// sending initialization commands
	lcdCmd(TOW_LINES_EIGHT_BIT_MODE);
 100:	88 e3       	ldi	r24, 0x38	; 56
 102:	ed df       	rcall	.-38     	; 0xde <lcdCmd>
	lcdCmd(DISPLAY_ON_CURSOR_BLINKING);
 104:	8e e0       	ldi	r24, 0x0E	; 14
 106:	eb df       	rcall	.-42     	; 0xde <lcdCmd>
	lcdCmd(CLEAR_DISPLAY_SCREEN);
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	e9 df       	rcall	.-46     	; 0xde <lcdCmd>
	lcdCmd(INCREAMENT_CURSOR);
 10c:	86 e0       	ldi	r24, 0x06	; 6
 10e:	e7 df       	rcall	.-50     	; 0xde <lcdCmd>
	lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
 110:	80 e8       	ldi	r24, 0x80	; 128
 112:	e5 df       	rcall	.-54     	; 0xde <lcdCmd>
 114:	83 ef       	ldi	r24, 0xF3	; 243
 116:	91 e0       	ldi	r25, 0x01	; 1
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <lcdInit+0x2e>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <lcdInit+0x34>
 11e:	00 00       	nop
 120:	08 95       	ret

00000122 <lcdData>:
 122:	98 b3       	in	r25, 0x18	; 24
	PORTB &= ~(1 << RS);
	PORTA = u8Cmd;
	enable();
}
void lcdData(char u8Data){
	PORTB |= (1 << RS);
 124:	91 60       	ori	r25, 0x01	; 1
 126:	98 bb       	out	0x18, r25	; 24
	PORTA = u8Data;
 128:	8b bb       	out	0x1b, r24	; 27
	enable();
 12a:	c6 cf       	rjmp	.-116    	; 0xb8 <enable>
 12c:	08 95       	ret

0000012e <lcdPrint>:
}
void lcdPrint(char *str)
{
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
 132:	cf 93       	push	r28
 134:	8c 01       	movw	r16, r24
	// PORTB |= (1 << RS); //set RS TO data
	uint8_t u8index = 0;
 136:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[u8index] != '\0'){
 138:	08 c0       	rjmp	.+16     	; 0x14a <lcdPrint+0x1c>
		lcdData(str[u8index]);
 13a:	f3 df       	rcall	.-26     	; 0x122 <lcdData>
		u8index++;
 13c:	cf 5f       	subi	r28, 0xFF	; 255
 13e:	83 ec       	ldi	r24, 0xC3	; 195
 140:	99 e0       	ldi	r25, 0x09	; 9
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <lcdPrint+0x14>
 146:	00 c0       	rjmp	.+0      	; 0x148 <lcdPrint+0x1a>
 148:	00 00       	nop
}
void lcdPrint(char *str)
{
	// PORTB |= (1 << RS); //set RS TO data
	uint8_t u8index = 0;
	while(str[u8index] != '\0'){
 14a:	f8 01       	movw	r30, r16
 14c:	ec 0f       	add	r30, r28
 14e:	f1 1d       	adc	r31, r1
 150:	80 81       	ld	r24, Z
 152:	81 11       	cpse	r24, r1
 154:	f2 cf       	rjmp	.-28     	; 0x13a <lcdPrint+0xc>
		lcdData(str[u8index]);
		u8index++;
		_delay_ms(10);
	}
}
 156:	cf 91       	pop	r28
 158:	1f 91       	pop	r17
 15a:	0f 91       	pop	r16
 15c:	08 95       	ret

0000015e <main>:
#include "utility.h"
#include "lcd.h"

int main(void)
{
	lcdInit();
 15e:	c5 df       	rcall	.-118    	; 0xea <lcdInit>
	lcdPrint("press a key ");
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	91 e0       	ldi	r25, 0x01	; 1
 164:	e4 df       	rcall	.-56     	; 0x12e <lcdPrint>
	unsigned char butn;
	
	
	for (int i=4; i<8;i++) //output
 166:	24 e0       	ldi	r18, 0x04	; 4
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	12 c0       	rjmp	.+36     	; 0x190 <main+0x32>
	{
		DDRC |= (1 << i);
 16c:	44 b3       	in	r20, 0x14	; 20
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 2e       	mov	r0, r18
 174:	02 c0       	rjmp	.+4      	; 0x17a <main+0x1c>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	0a 94       	dec	r0
 17c:	e2 f7       	brpl	.-8      	; 0x176 <main+0x18>
 17e:	94 2f       	mov	r25, r20
 180:	98 2b       	or	r25, r24
 182:	94 bb       	out	0x14, r25	; 20
		PORTC &= ~(1 << i);
 184:	95 b3       	in	r25, 0x15	; 21
 186:	80 95       	com	r24
 188:	89 23       	and	r24, r25
 18a:	85 bb       	out	0x15, r24	; 21
	lcdInit();
	lcdPrint("press a key ");
	unsigned char butn;
	
	
	for (int i=4; i<8;i++) //output
 18c:	2f 5f       	subi	r18, 0xFF	; 255
 18e:	3f 4f       	sbci	r19, 0xFF	; 255
 190:	28 30       	cpi	r18, 0x08	; 8
 192:	31 05       	cpc	r19, r1
 194:	5c f3       	brlt	.-42     	; 0x16c <main+0xe>
 196:	20 e0       	ldi	r18, 0x00	; 0
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	12 c0       	rjmp	.+36     	; 0x1c0 <main+0x62>
		DDRC |= (1 << i);
		PORTC &= ~(1 << i);
	}
	for (int j=0; j<4;j++) //input
	{
		DDRC &= ~(1 << j);
 19c:	44 b3       	in	r20, 0x14	; 20
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 2e       	mov	r0, r18
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <main+0x4c>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <main+0x48>
 1ae:	98 2f       	mov	r25, r24
 1b0:	90 95       	com	r25
 1b2:	94 23       	and	r25, r20
 1b4:	94 bb       	out	0x14, r25	; 20
		PORTC |= (1 << j);
 1b6:	95 b3       	in	r25, 0x15	; 21
 1b8:	89 2b       	or	r24, r25
 1ba:	85 bb       	out	0x15, r24	; 21
	for (int i=4; i<8;i++) //output
	{
		DDRC |= (1 << i);
		PORTC &= ~(1 << i);
	}
	for (int j=0; j<4;j++) //input
 1bc:	2f 5f       	subi	r18, 0xFF	; 255
 1be:	3f 4f       	sbci	r19, 0xFF	; 255
 1c0:	24 30       	cpi	r18, 0x04	; 4
 1c2:	31 05       	cpc	r19, r1
 1c4:	5c f3       	brlt	.-42     	; 0x19c <main+0x3e>
	{
		DDRC &= ~(1 << j);
		PORTC |= (1 << j);
	}
	DDRA = 0xFF;
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	8a bb       	out	0x1a, r24	; 26
	while (1)
	{
		if(gpio_read_pin(PORTC_ID, 0) == 1 && gpio_read_pin(PORTC_ID, 1) ==1 &&
 1ca:	60 e0       	ldi	r22, 0x00	; 0
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	1a d3       	rcall	.+1588   	; 0x804 <gpio_read_pin>
 1d0:	81 30       	cpi	r24, 0x01	; 1
 1d2:	89 f4       	brne	.+34     	; 0x1f6 <main+0x98>
 1d4:	61 e0       	ldi	r22, 0x01	; 1
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	15 d3       	rcall	.+1578   	; 0x804 <gpio_read_pin>
 1da:	81 30       	cpi	r24, 0x01	; 1
 1dc:	61 f4       	brne	.+24     	; 0x1f6 <main+0x98>
		gpio_read_pin(PORTC_ID, 2) == 1 && gpio_read_pin(PORTC_ID, 3) == 1){
 1de:	62 e0       	ldi	r22, 0x02	; 2
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	10 d3       	rcall	.+1568   	; 0x804 <gpio_read_pin>
		PORTC |= (1 << j);
	}
	DDRA = 0xFF;
	while (1)
	{
		if(gpio_read_pin(PORTC_ID, 0) == 1 && gpio_read_pin(PORTC_ID, 1) ==1 &&
 1e4:	81 30       	cpi	r24, 0x01	; 1
 1e6:	39 f4       	brne	.+14     	; 0x1f6 <main+0x98>
		gpio_read_pin(PORTC_ID, 2) == 1 && gpio_read_pin(PORTC_ID, 3) == 1){
 1e8:	63 e0       	ldi	r22, 0x03	; 3
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	0b d3       	rcall	.+1558   	; 0x804 <gpio_read_pin>
 1ee:	81 30       	cpi	r24, 0x01	; 1
 1f0:	11 f4       	brne	.+4      	; 0x1f6 <main+0x98>
 1f2:	1b ba       	out	0x1b, r1	; 27
			PORTA = 0x00;
 1f4:	ea cf       	rjmp	.-44     	; 0x1ca <main+0x6c>
 1f6:	20 e0       	ldi	r18, 0x00	; 0
		}
		else
		{
			for (int j=0; j<4;j++) // read status of colums pins
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	0c c0       	rjmp	.+24     	; 0x214 <main+0xb6>
 1fc:	83 b3       	in	r24, 0x13	; 19
			{
				if ((PINC & (1 << j ))==0)
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 2e       	mov	r0, r18
 202:	02 c0       	rjmp	.+4      	; 0x208 <main+0xaa>
 204:	95 95       	asr	r25
 206:	87 95       	ror	r24
 208:	0a 94       	dec	r0
 20a:	e2 f7       	brpl	.-8      	; 0x204 <main+0xa6>
 20c:	80 ff       	sbrs	r24, 0
 20e:	c2 2f       	mov	r28, r18
				{
					butn = j;
 210:	2f 5f       	subi	r18, 0xFF	; 255
		gpio_read_pin(PORTC_ID, 2) == 1 && gpio_read_pin(PORTC_ID, 3) == 1){
			PORTA = 0x00;
		}
		else
		{
			for (int j=0; j<4;j++) // read status of colums pins
 212:	3f 4f       	sbci	r19, 0xFF	; 255
 214:	24 30       	cpi	r18, 0x04	; 4
 216:	31 05       	cpc	r19, r1
 218:	8c f3       	brlt	.-30     	; 0x1fc <main+0x9e>
 21a:	85 b3       	in	r24, 0x15	; 21
				if ((PINC & (1 << j ))==0)
				{
					butn = j;
				}
			}
			PORTC &= ~(1 << 4);
 21c:	8f 7e       	andi	r24, 0xEF	; 239
 21e:	85 bb       	out	0x15, r24	; 21
 220:	85 b3       	in	r24, 0x15	; 21
			PORTC |= (1 << 5);
 222:	80 62       	ori	r24, 0x20	; 32
 224:	85 bb       	out	0x15, r24	; 21
 226:	85 b3       	in	r24, 0x15	; 21
			PORTC |= (1 << 6);
 228:	80 64       	ori	r24, 0x40	; 64
 22a:	85 bb       	out	0x15, r24	; 21
			PORTC |= (1 << 7);
 22c:	85 b3       	in	r24, 0x15	; 21
 22e:	80 68       	ori	r24, 0x80	; 128
 230:	85 bb       	out	0x15, r24	; 21
			if ((gpio_read_pin(PORTC_ID,butn))==1)
 232:	6c 2f       	mov	r22, r28
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	e6 d2       	rcall	.+1484   	; 0x804 <gpio_read_pin>
 238:	81 30       	cpi	r24, 0x01	; 1
 23a:	09 f0       	breq	.+2      	; 0x23e <main+0xe0>
 23c:	38 c2       	rjmp	.+1136   	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 23e:	85 b3       	in	r24, 0x15	; 21
			{
				PORTC |= (1 << 4);
 240:	80 61       	ori	r24, 0x10	; 16
 242:	85 bb       	out	0x15, r24	; 21
 244:	85 b3       	in	r24, 0x15	; 21
				PORTC &= ~(1 << 5);
 246:	8f 7d       	andi	r24, 0xDF	; 223
 248:	85 bb       	out	0x15, r24	; 21
 24a:	85 b3       	in	r24, 0x15	; 21
				PORTC |= (1 << 6);
 24c:	80 64       	ori	r24, 0x40	; 64
 24e:	85 bb       	out	0x15, r24	; 21
				PORTC |= (1 << 7);
 250:	85 b3       	in	r24, 0x15	; 21
 252:	80 68       	ori	r24, 0x80	; 128
 254:	85 bb       	out	0x15, r24	; 21
				if ((gpio_read_pin(PORTC_ID,butn))==1)
 256:	6c 2f       	mov	r22, r28
 258:	82 e0       	ldi	r24, 0x02	; 2
 25a:	d4 d2       	rcall	.+1448   	; 0x804 <gpio_read_pin>
 25c:	81 30       	cpi	r24, 0x01	; 1
 25e:	09 f0       	breq	.+2      	; 0x262 <main+0x104>
 260:	7b c1       	rjmp	.+758    	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 262:	85 b3       	in	r24, 0x15	; 21
				{
					PORTC |= (1 << 4);
 264:	80 61       	ori	r24, 0x10	; 16
 266:	85 bb       	out	0x15, r24	; 21
 268:	85 b3       	in	r24, 0x15	; 21
					PORTC |= (1 << 5);
 26a:	80 62       	ori	r24, 0x20	; 32
 26c:	85 bb       	out	0x15, r24	; 21
 26e:	85 b3       	in	r24, 0x15	; 21
					PORTC &= ~(1 << 6);
 270:	8f 7b       	andi	r24, 0xBF	; 191
 272:	85 bb       	out	0x15, r24	; 21
					PORTC |= (1 << 7);
 274:	85 b3       	in	r24, 0x15	; 21
 276:	80 68       	ori	r24, 0x80	; 128
 278:	85 bb       	out	0x15, r24	; 21
					if ((gpio_read_pin(PORTC_ID,butn))==1)
 27a:	6c 2f       	mov	r22, r28
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	c2 d2       	rcall	.+1412   	; 0x804 <gpio_read_pin>
 280:	81 30       	cpi	r24, 0x01	; 1
 282:	09 f0       	breq	.+2      	; 0x286 <main+0x128>
 284:	be c0       	rjmp	.+380    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 286:	85 b3       	in	r24, 0x15	; 21
					{
						PORTC |= (1 << 4);
 288:	80 61       	ori	r24, 0x10	; 16
 28a:	85 bb       	out	0x15, r24	; 21
 28c:	85 b3       	in	r24, 0x15	; 21
						PORTC |= (1 << 5);
 28e:	80 62       	ori	r24, 0x20	; 32
 290:	85 bb       	out	0x15, r24	; 21
						PORTC |= (1 << 6);
 292:	85 b3       	in	r24, 0x15	; 21
 294:	80 64       	ori	r24, 0x40	; 64
 296:	85 bb       	out	0x15, r24	; 21
						PORTC &= ~(1 << 7);
 298:	85 b3       	in	r24, 0x15	; 21
 29a:	8f 77       	andi	r24, 0x7F	; 127
 29c:	85 bb       	out	0x15, r24	; 21
						if ((gpio_read_pin(PORTC_ID,butn))==1)
 29e:	6c 2f       	mov	r22, r28
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	b0 d2       	rcall	.+1376   	; 0x804 <gpio_read_pin>
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	11 f4       	brne	.+4      	; 0x2ac <main+0x14e>
						{
							PORTA = 0x00;
 2a8:	1b ba       	out	0x1b, r1	; 27
						}
						else {
							if (gpio_read_pin(PORTC_ID,3)==1){
 2aa:	8f cf       	rjmp	.-226    	; 0x1ca <main+0x6c>
 2ac:	63 e0       	ldi	r22, 0x03	; 3
 2ae:	82 e0       	ldi	r24, 0x02	; 2
 2b0:	a9 d2       	rcall	.+1362   	; 0x804 <gpio_read_pin>
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	09 f0       	breq	.+2      	; 0x2b8 <main+0x15a>
								if (gpio_read_pin(PORTC_ID, 2)==1){
 2b6:	81 c0       	rjmp	.+258    	; 0x3ba <main+0x25c>
 2b8:	62 e0       	ldi	r22, 0x02	; 2
 2ba:	82 e0       	ldi	r24, 0x02	; 2
 2bc:	a3 d2       	rcall	.+1350   	; 0x804 <gpio_read_pin>
 2be:	81 30       	cpi	r24, 0x01	; 1
 2c0:	09 f0       	breq	.+2      	; 0x2c4 <main+0x166>
									if (gpio_read_pin(PORTC_ID, 1)==1){
 2c2:	57 c0       	rjmp	.+174    	; 0x372 <main+0x214>
 2c4:	61 e0       	ldi	r22, 0x01	; 1
 2c6:	82 e0       	ldi	r24, 0x02	; 2
 2c8:	9d d2       	rcall	.+1338   	; 0x804 <gpio_read_pin>
										if (gpio_read_pin(PORTC_ID, 0)==1){
 2ca:	81 30       	cpi	r24, 0x01	; 1
 2cc:	71 f5       	brne	.+92     	; 0x32a <main+0x1cc>
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	82 e0       	ldi	r24, 0x02	; 2
 2d2:	98 d2       	rcall	.+1328   	; 0x804 <gpio_read_pin>
 2d4:	81 30       	cpi	r24, 0x01	; 1
											lcdCmd(DISPLAY_ON_CURSOR_BLINKING);
 2d6:	29 f4       	brne	.+10     	; 0x2e2 <main+0x184>
 2d8:	8e e0       	ldi	r24, 0x0E	; 14
											lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
 2da:	01 df       	rcall	.-510    	; 0xde <lcdCmd>
 2dc:	80 e8       	ldi	r24, 0x80	; 128
 2de:	ff de       	rcall	.-514    	; 0xde <lcdCmd>
										}
										else	{
											lcdData('A');
 2e0:	74 cf       	rjmp	.-280    	; 0x1ca <main+0x6c>
 2e2:	81 e4       	ldi	r24, 0x41	; 65
 2e4:	1e df       	rcall	.-452    	; 0x122 <lcdData>
 2e6:	2f e3       	ldi	r18, 0x3F	; 63
 2e8:	82 e4       	ldi	r24, 0x42	; 66
 2ea:	9f e0       	ldi	r25, 0x0F	; 15
 2ec:	21 50       	subi	r18, 0x01	; 1
 2ee:	80 40       	sbci	r24, 0x00	; 0
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <main+0x18e>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <main+0x198>
 2f6:	00 00       	nop
											_delay_ms(5000);
											lcdInit();
 2f8:	f8 de       	rcall	.-528    	; 0xea <lcdInit>
 2fa:	8d e0       	ldi	r24, 0x0D	; 13
											lcdPrint("press again!! ");;
 2fc:	91 e0       	ldi	r25, 0x01	; 1
 2fe:	17 df       	rcall	.-466    	; 0x12e <lcdPrint>
 300:	24 e0       	ldi	r18, 0x04	; 4
 302:	30 e0       	ldi	r19, 0x00	; 0
											for (int i =4; i<8;i++)
 304:	0e c0       	rjmp	.+28     	; 0x322 <main+0x1c4>
 306:	45 b3       	in	r20, 0x15	; 21
 308:	81 e0       	ldi	r24, 0x01	; 1
											{
												PORTC &= ~(1 << i);
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	02 2e       	mov	r0, r18
 30e:	02 c0       	rjmp	.+4      	; 0x314 <main+0x1b6>
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	0a 94       	dec	r0
 316:	e2 f7       	brpl	.-8      	; 0x310 <main+0x1b2>
 318:	80 95       	com	r24
 31a:	84 23       	and	r24, r20
 31c:	85 bb       	out	0x15, r24	; 21
										else	{
											lcdData('A');
											_delay_ms(5000);
											lcdInit();
											lcdPrint("press again!! ");;
											for (int i =4; i<8;i++)
 31e:	2f 5f       	subi	r18, 0xFF	; 255
 320:	3f 4f       	sbci	r19, 0xFF	; 255
 322:	28 30       	cpi	r18, 0x08	; 8
 324:	31 05       	cpc	r19, r1
 326:	7c f3       	brlt	.-34     	; 0x306 <main+0x1a8>
												PORTC &= ~(1 << i);
											}
										}
									}
									else	{
										lcdData('3');
 328:	50 cf       	rjmp	.-352    	; 0x1ca <main+0x6c>
 32a:	83 e3       	ldi	r24, 0x33	; 51
 32c:	fa de       	rcall	.-524    	; 0x122 <lcdData>
 32e:	2f e3       	ldi	r18, 0x3F	; 63
 330:	82 e4       	ldi	r24, 0x42	; 66
 332:	9f e0       	ldi	r25, 0x0F	; 15
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <main+0x1d6>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x1e0>
 33e:	00 00       	nop
										_delay_ms(5000);
										lcdInit();
 340:	d4 de       	rcall	.-600    	; 0xea <lcdInit>
 342:	8d e0       	ldi	r24, 0x0D	; 13
										lcdPrint("press again!! ");
 344:	91 e0       	ldi	r25, 0x01	; 1
 346:	f3 de       	rcall	.-538    	; 0x12e <lcdPrint>
 348:	24 e0       	ldi	r18, 0x04	; 4
 34a:	30 e0       	ldi	r19, 0x00	; 0
										for (int i =4; i<8;i++)
 34c:	0e c0       	rjmp	.+28     	; 0x36a <main+0x20c>
 34e:	45 b3       	in	r20, 0x15	; 21
										{
											PORTC &= ~(1 << i);
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	02 2e       	mov	r0, r18
 356:	02 c0       	rjmp	.+4      	; 0x35c <main+0x1fe>
 358:	88 0f       	add	r24, r24
 35a:	99 1f       	adc	r25, r25
 35c:	0a 94       	dec	r0
 35e:	e2 f7       	brpl	.-8      	; 0x358 <main+0x1fa>
 360:	80 95       	com	r24
 362:	84 23       	and	r24, r20
									else	{
										lcdData('3');
										_delay_ms(5000);
										lcdInit();
										lcdPrint("press again!! ");
										for (int i =4; i<8;i++)
 364:	85 bb       	out	0x15, r24	; 21
 366:	2f 5f       	subi	r18, 0xFF	; 255
 368:	3f 4f       	sbci	r19, 0xFF	; 255
 36a:	28 30       	cpi	r18, 0x08	; 8
 36c:	31 05       	cpc	r19, r1
 36e:	7c f3       	brlt	.-34     	; 0x34e <main+0x1f0>
											PORTC &= ~(1 << i);
										}
									}
								}
								else	{
									lcdData('2');
 370:	2c cf       	rjmp	.-424    	; 0x1ca <main+0x6c>
 372:	82 e3       	ldi	r24, 0x32	; 50
 374:	d6 de       	rcall	.-596    	; 0x122 <lcdData>
 376:	2f e3       	ldi	r18, 0x3F	; 63
 378:	82 e4       	ldi	r24, 0x42	; 66
 37a:	9f e0       	ldi	r25, 0x0F	; 15
 37c:	21 50       	subi	r18, 0x01	; 1
 37e:	80 40       	sbci	r24, 0x00	; 0
 380:	90 40       	sbci	r25, 0x00	; 0
 382:	e1 f7       	brne	.-8      	; 0x37c <main+0x21e>
 384:	00 c0       	rjmp	.+0      	; 0x386 <main+0x228>
 386:	00 00       	nop
									_delay_ms(5000);
									lcdInit();
 388:	b0 de       	rcall	.-672    	; 0xea <lcdInit>
 38a:	8d e0       	ldi	r24, 0x0D	; 13
									lcdPrint("press again!! ");
 38c:	91 e0       	ldi	r25, 0x01	; 1
 38e:	cf de       	rcall	.-610    	; 0x12e <lcdPrint>
 390:	24 e0       	ldi	r18, 0x04	; 4
									for (int i =4; i<8;i++)
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	0e c0       	rjmp	.+28     	; 0x3b2 <main+0x254>
 396:	45 b3       	in	r20, 0x15	; 21
									{
										PORTC &= ~(1 << i);
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 2e       	mov	r0, r18
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <main+0x246>
 3a0:	88 0f       	add	r24, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	0a 94       	dec	r0
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <main+0x242>
 3a8:	80 95       	com	r24
 3aa:	84 23       	and	r24, r20
								else	{
									lcdData('2');
									_delay_ms(5000);
									lcdInit();
									lcdPrint("press again!! ");
									for (int i =4; i<8;i++)
 3ac:	85 bb       	out	0x15, r24	; 21
 3ae:	2f 5f       	subi	r18, 0xFF	; 255
 3b0:	3f 4f       	sbci	r19, 0xFF	; 255
 3b2:	28 30       	cpi	r18, 0x08	; 8
 3b4:	31 05       	cpc	r19, r1
 3b6:	7c f3       	brlt	.-34     	; 0x396 <main+0x238>
										PORTC &= ~(1 << i);
									}
								}
							}
					else	{
						lcdData('1');
 3b8:	08 cf       	rjmp	.-496    	; 0x1ca <main+0x6c>
 3ba:	81 e3       	ldi	r24, 0x31	; 49
 3bc:	b2 de       	rcall	.-668    	; 0x122 <lcdData>
 3be:	2f e3       	ldi	r18, 0x3F	; 63
 3c0:	82 e4       	ldi	r24, 0x42	; 66
 3c2:	9f e0       	ldi	r25, 0x0F	; 15
 3c4:	21 50       	subi	r18, 0x01	; 1
 3c6:	80 40       	sbci	r24, 0x00	; 0
 3c8:	90 40       	sbci	r25, 0x00	; 0
 3ca:	e1 f7       	brne	.-8      	; 0x3c4 <main+0x266>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <main+0x270>
 3ce:	00 00       	nop
							_delay_ms(5000);
							lcdInit();
 3d0:	8c de       	rcall	.-744    	; 0xea <lcdInit>
							lcdPrint("press again!! ");
 3d2:	8d e0       	ldi	r24, 0x0D	; 13
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	ab de       	rcall	.-682    	; 0x12e <lcdPrint>
 3d8:	24 e0       	ldi	r18, 0x04	; 4
							for (int i =4; i<8;i++)
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	0e c0       	rjmp	.+28     	; 0x3fa <main+0x29c>
							{
								PORTC &= ~(1 << i);
 3de:	45 b3       	in	r20, 0x15	; 21
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	02 2e       	mov	r0, r18
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <main+0x28e>
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	0a 94       	dec	r0
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <main+0x28a>
 3f0:	80 95       	com	r24
					else	{
						lcdData('1');
							_delay_ms(5000);
							lcdInit();
							lcdPrint("press again!! ");
							for (int i =4; i<8;i++)
 3f2:	84 23       	and	r24, r20
 3f4:	85 bb       	out	0x15, r24	; 21
 3f6:	2f 5f       	subi	r18, 0xFF	; 255
 3f8:	3f 4f       	sbci	r19, 0xFF	; 255
							}
						}
						}
					}
					else { 
						if (gpio_read_pin(PORTC_ID,3)==1){
 3fa:	28 30       	cpi	r18, 0x08	; 8
 3fc:	31 05       	cpc	r19, r1
 3fe:	7c f3       	brlt	.-34     	; 0x3de <main+0x280>
 400:	e4 ce       	rjmp	.-568    	; 0x1ca <main+0x6c>
 402:	63 e0       	ldi	r22, 0x03	; 3
 404:	82 e0       	ldi	r24, 0x02	; 2
						 if (gpio_read_pin(PORTC_ID, 2)==1){
 406:	fe d1       	rcall	.+1020   	; 0x804 <gpio_read_pin>
 408:	81 30       	cpi	r24, 0x01	; 1
 40a:	09 f0       	breq	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40c:	81 c0       	rjmp	.+258    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 40e:	62 e0       	ldi	r22, 0x02	; 2
 410:	82 e0       	ldi	r24, 0x02	; 2
							if (gpio_read_pin(PORTC_ID, 1)==1){
 412:	f8 d1       	rcall	.+1008   	; 0x804 <gpio_read_pin>
 414:	81 30       	cpi	r24, 0x01	; 1
 416:	09 f0       	breq	.+2      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 418:	57 c0       	rjmp	.+174    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 41a:	61 e0       	ldi	r22, 0x01	; 1
 41c:	82 e0       	ldi	r24, 0x02	; 2
								if (gpio_read_pin(PORTC_ID, 0)==1){
 41e:	f2 d1       	rcall	.+996    	; 0x804 <gpio_read_pin>
 420:	81 30       	cpi	r24, 0x01	; 1
 422:	71 f5       	brne	.+92     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	82 e0       	ldi	r24, 0x02	; 2
 428:	ed d1       	rcall	.+986    	; 0x804 <gpio_read_pin>
									lcdCmd(DISPLAY_ON_CURSOR_BLINKING);
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	29 f4       	brne	.+10     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 42e:	8e e0       	ldi	r24, 0x0E	; 14
									lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
 430:	56 de       	rcall	.-852    	; 0xde <lcdCmd>
 432:	80 e8       	ldi	r24, 0x80	; 128
 434:	54 de       	rcall	.-856    	; 0xde <lcdCmd>
 436:	c9 ce       	rjmp	.-622    	; 0x1ca <main+0x6c>
								
								}
								else	{
									lcdData('B');
 438:	82 e4       	ldi	r24, 0x42	; 66
 43a:	73 de       	rcall	.-794    	; 0x122 <lcdData>
 43c:	2f e3       	ldi	r18, 0x3F	; 63
 43e:	82 e4       	ldi	r24, 0x42	; 66
 440:	9f e0       	ldi	r25, 0x0F	; 15
 442:	21 50       	subi	r18, 0x01	; 1
 444:	80 40       	sbci	r24, 0x00	; 0
 446:	90 40       	sbci	r25, 0x00	; 0
 448:	e1 f7       	brne	.-8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
									_delay_ms(5000);
									lcdInit();
 44e:	4d de       	rcall	.-870    	; 0xea <lcdInit>
									lcdPrint("press again!! ");
 450:	8d e0       	ldi	r24, 0x0D	; 13
 452:	91 e0       	ldi	r25, 0x01	; 1
 454:	6c de       	rcall	.-808    	; 0x12e <lcdPrint>
									for (int i =4; i<8;i++)
 456:	24 e0       	ldi	r18, 0x04	; 4
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
									{
										PORTC &= ~(1 << i);
 45c:	45 b3       	in	r20, 0x15	; 21
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	02 2e       	mov	r0, r18
 464:	02 c0       	rjmp	.+4      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	0a 94       	dec	r0
 46c:	e2 f7       	brpl	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 46e:	80 95       	com	r24
 470:	84 23       	and	r24, r20
 472:	85 bb       	out	0x15, r24	; 21
								else	{
									lcdData('B');
									_delay_ms(5000);
									lcdInit();
									lcdPrint("press again!! ");
									for (int i =4; i<8;i++)
 474:	2f 5f       	subi	r18, 0xFF	; 255
 476:	3f 4f       	sbci	r19, 0xFF	; 255
 478:	28 30       	cpi	r18, 0x08	; 8
 47a:	31 05       	cpc	r19, r1
 47c:	7c f3       	brlt	.-34     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 47e:	a5 ce       	rjmp	.-694    	; 0x1ca <main+0x6c>
										PORTC &= ~(1 << i);
									}
								}
							}
							else	{
								lcdData('6');
 480:	86 e3       	ldi	r24, 0x36	; 54
 482:	4f de       	rcall	.-866    	; 0x122 <lcdData>
 484:	2f e3       	ldi	r18, 0x3F	; 63
 486:	82 e4       	ldi	r24, 0x42	; 66
 488:	9f e0       	ldi	r25, 0x0F	; 15
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	80 40       	sbci	r24, 0x00	; 0
 48e:	90 40       	sbci	r25, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 492:	00 c0       	rjmp	.+0      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
								_delay_ms(5000);
								lcdInit();
 494:	00 00       	nop
								lcdPrint("press again!! ");
 496:	29 de       	rcall	.-942    	; 0xea <lcdInit>
 498:	8d e0       	ldi	r24, 0x0D	; 13
 49a:	91 e0       	ldi	r25, 0x01	; 1
 49c:	48 de       	rcall	.-880    	; 0x12e <lcdPrint>
								for (int i =4; i<8;i++)
 49e:	24 e0       	ldi	r18, 0x04	; 4
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	0e c0       	rjmp	.+28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
								{
									PORTC &= ~(1 << i);
 4a4:	45 b3       	in	r20, 0x15	; 21
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	02 2e       	mov	r0, r18
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	0a 94       	dec	r0
 4b4:	e2 f7       	brpl	.-8      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4b6:	80 95       	com	r24
 4b8:	84 23       	and	r24, r20
 4ba:	85 bb       	out	0x15, r24	; 21
							else	{
								lcdData('6');
								_delay_ms(5000);
								lcdInit();
								lcdPrint("press again!! ");
								for (int i =4; i<8;i++)
 4bc:	2f 5f       	subi	r18, 0xFF	; 255
 4be:	3f 4f       	sbci	r19, 0xFF	; 255
 4c0:	28 30       	cpi	r18, 0x08	; 8
 4c2:	31 05       	cpc	r19, r1
 4c4:	7c f3       	brlt	.-34     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
									PORTC &= ~(1 << i);
								}
							}
						}
						else	{
							lcdData('5');
 4c6:	81 ce       	rjmp	.-766    	; 0x1ca <main+0x6c>
 4c8:	85 e3       	ldi	r24, 0x35	; 53
 4ca:	2b de       	rcall	.-938    	; 0x122 <lcdData>
 4cc:	2f e3       	ldi	r18, 0x3F	; 63
 4ce:	82 e4       	ldi	r24, 0x42	; 66
 4d0:	9f e0       	ldi	r25, 0x0F	; 15
 4d2:	21 50       	subi	r18, 0x01	; 1
 4d4:	80 40       	sbci	r24, 0x00	; 0
 4d6:	90 40       	sbci	r25, 0x00	; 0
 4d8:	e1 f7       	brne	.-8      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
							_delay_ms(5000);
							lcdInit();
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4dc:	00 00       	nop
							lcdPrint("press again!! ");
 4de:	05 de       	rcall	.-1014   	; 0xea <lcdInit>
 4e0:	8d e0       	ldi	r24, 0x0D	; 13
 4e2:	91 e0       	ldi	r25, 0x01	; 1
 4e4:	24 de       	rcall	.-952    	; 0x12e <lcdPrint>
							for (int i =4; i<8;i++)
 4e6:	24 e0       	ldi	r18, 0x04	; 4
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	0e c0       	rjmp	.+28     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
							{
								PORTC &= ~(1 << i);
 4ec:	45 b3       	in	r20, 0x15	; 21
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	02 2e       	mov	r0, r18
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f6:	88 0f       	add	r24, r24
 4f8:	99 1f       	adc	r25, r25
 4fa:	0a 94       	dec	r0
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4fe:	80 95       	com	r24
 500:	84 23       	and	r24, r20
 502:	85 bb       	out	0x15, r24	; 21
						else	{
							lcdData('5');
							_delay_ms(5000);
							lcdInit();
							lcdPrint("press again!! ");
							for (int i =4; i<8;i++)
 504:	2f 5f       	subi	r18, 0xFF	; 255
 506:	3f 4f       	sbci	r19, 0xFF	; 255
 508:	28 30       	cpi	r18, 0x08	; 8
 50a:	31 05       	cpc	r19, r1
 50c:	7c f3       	brlt	.-34     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
								PORTC &= ~(1 << i);
							}
						}
					}
					else	{
						lcdData('4');
 50e:	5d ce       	rjmp	.-838    	; 0x1ca <main+0x6c>
 510:	84 e3       	ldi	r24, 0x34	; 52
 512:	07 de       	rcall	.-1010   	; 0x122 <lcdData>
 514:	2f e3       	ldi	r18, 0x3F	; 63
 516:	82 e4       	ldi	r24, 0x42	; 66
 518:	9f e0       	ldi	r25, 0x0F	; 15
 51a:	21 50       	subi	r18, 0x01	; 1
 51c:	80 40       	sbci	r24, 0x00	; 0
 51e:	90 40       	sbci	r25, 0x00	; 0
 520:	e1 f7       	brne	.-8      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
					_delay_ms(5000);
					lcdInit();
 522:	00 c0       	rjmp	.+0      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
					lcdPrint("press again!! ");
 524:	00 00       	nop
 526:	e1 dd       	rcall	.-1086   	; 0xea <lcdInit>
 528:	8d e0       	ldi	r24, 0x0D	; 13
						for (int i =4; i<8;i++)
 52a:	91 e0       	ldi	r25, 0x01	; 1
 52c:	00 de       	rcall	.-1024   	; 0x12e <lcdPrint>
						{
							PORTC &= ~(1 << i);
 52e:	24 e0       	ldi	r18, 0x04	; 4
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	0e c0       	rjmp	.+28     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 534:	45 b3       	in	r20, 0x15	; 21
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	02 2e       	mov	r0, r18
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53e:	88 0f       	add	r24, r24
 540:	99 1f       	adc	r25, r25
					else	{
						lcdData('4');
					_delay_ms(5000);
					lcdInit();
					lcdPrint("press again!! ");
						for (int i =4; i<8;i++)
 542:	0a 94       	dec	r0
 544:	e2 f7       	brpl	.-8      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 546:	80 95       	com	r24
 548:	84 23       	and	r24, r20
 54a:	85 bb       	out	0x15, r24	; 21
						}
					}
					}
				}
				else {
					if (gpio_read_pin(PORTC_ID,3)==1){
 54c:	2f 5f       	subi	r18, 0xFF	; 255
 54e:	3f 4f       	sbci	r19, 0xFF	; 255
 550:	28 30       	cpi	r18, 0x08	; 8
 552:	31 05       	cpc	r19, r1
 554:	7c f3       	brlt	.-34     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 556:	39 ce       	rjmp	.-910    	; 0x1ca <main+0x6c>
 558:	63 e0       	ldi	r22, 0x03	; 3
					 if (gpio_read_pin(PORTC_ID, 2)==1){
 55a:	82 e0       	ldi	r24, 0x02	; 2
 55c:	53 d1       	rcall	.+678    	; 0x804 <gpio_read_pin>
 55e:	81 30       	cpi	r24, 0x01	; 1
 560:	09 f0       	breq	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 562:	81 c0       	rjmp	.+258    	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 564:	62 e0       	ldi	r22, 0x02	; 2
 566:	82 e0       	ldi	r24, 0x02	; 2
						if (gpio_read_pin(PORTC_ID, 1)==1){
 568:	4d d1       	rcall	.+666    	; 0x804 <gpio_read_pin>
 56a:	81 30       	cpi	r24, 0x01	; 1
 56c:	09 f0       	breq	.+2      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56e:	57 c0       	rjmp	.+174    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 570:	61 e0       	ldi	r22, 0x01	; 1
							if (gpio_read_pin(PORTC_ID, 0)==1){
 572:	82 e0       	ldi	r24, 0x02	; 2
 574:	47 d1       	rcall	.+654    	; 0x804 <gpio_read_pin>
 576:	81 30       	cpi	r24, 0x01	; 1
 578:	71 f5       	brne	.+92     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 57a:	60 e0       	ldi	r22, 0x00	; 0
 57c:	82 e0       	ldi	r24, 0x02	; 2
								lcdCmd(DISPLAY_ON_CURSOR_BLINKING);
 57e:	42 d1       	rcall	.+644    	; 0x804 <gpio_read_pin>
 580:	81 30       	cpi	r24, 0x01	; 1
								lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
 582:	29 f4       	brne	.+10     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 584:	8e e0       	ldi	r24, 0x0E	; 14
 586:	ab dd       	rcall	.-1194   	; 0xde <lcdCmd>
							}
							else	{
								lcdData('C');
 588:	80 e8       	ldi	r24, 0x80	; 128
 58a:	a9 dd       	rcall	.-1198   	; 0xde <lcdCmd>
 58c:	1e ce       	rjmp	.-964    	; 0x1ca <main+0x6c>
 58e:	83 e4       	ldi	r24, 0x43	; 67
 590:	c8 dd       	rcall	.-1136   	; 0x122 <lcdData>
 592:	2f e3       	ldi	r18, 0x3F	; 63
 594:	82 e4       	ldi	r24, 0x42	; 66
 596:	9f e0       	ldi	r25, 0x0F	; 15
 598:	21 50       	subi	r18, 0x01	; 1
 59a:	80 40       	sbci	r24, 0x00	; 0
 59c:	90 40       	sbci	r25, 0x00	; 0
 59e:	e1 f7       	brne	.-8      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
								_delay_ms(5000);
								lcdInit();
 5a0:	00 c0       	rjmp	.+0      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 5a2:	00 00       	nop
								lcdPrint("press again!! ");
 5a4:	a2 dd       	rcall	.-1212   	; 0xea <lcdInit>
 5a6:	8d e0       	ldi	r24, 0x0D	; 13
 5a8:	91 e0       	ldi	r25, 0x01	; 1
 5aa:	c1 dd       	rcall	.-1150   	; 0x12e <lcdPrint>
								for (int i =4; i<8;i++)
 5ac:	24 e0       	ldi	r18, 0x04	; 4
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	0e c0       	rjmp	.+28     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
								{
									PORTC &= ~(1 << i);
 5b2:	45 b3       	in	r20, 0x15	; 21
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	02 2e       	mov	r0, r18
 5ba:	02 c0       	rjmp	.+4      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5bc:	88 0f       	add	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	0a 94       	dec	r0
 5c2:	e2 f7       	brpl	.-8      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5c4:	80 95       	com	r24
							else	{
								lcdData('C');
								_delay_ms(5000);
								lcdInit();
								lcdPrint("press again!! ");
								for (int i =4; i<8;i++)
 5c6:	84 23       	and	r24, r20
 5c8:	85 bb       	out	0x15, r24	; 21
 5ca:	2f 5f       	subi	r18, 0xFF	; 255
 5cc:	3f 4f       	sbci	r19, 0xFF	; 255
 5ce:	28 30       	cpi	r18, 0x08	; 8
									PORTC &= ~(1 << i);
								}
							}
						}
						else	{
							lcdData('9');
 5d0:	31 05       	cpc	r19, r1
 5d2:	7c f3       	brlt	.-34     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5d4:	fa cd       	rjmp	.-1036   	; 0x1ca <main+0x6c>
 5d6:	89 e3       	ldi	r24, 0x39	; 57
 5d8:	a4 dd       	rcall	.-1208   	; 0x122 <lcdData>
 5da:	2f e3       	ldi	r18, 0x3F	; 63
 5dc:	82 e4       	ldi	r24, 0x42	; 66
 5de:	9f e0       	ldi	r25, 0x0F	; 15
 5e0:	21 50       	subi	r18, 0x01	; 1
 5e2:	80 40       	sbci	r24, 0x00	; 0
 5e4:	90 40       	sbci	r25, 0x00	; 0
 5e6:	e1 f7       	brne	.-8      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
						_delay_ms(5000);
						lcdInit();
 5e8:	00 c0       	rjmp	.+0      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5ea:	00 00       	nop
						lcdPrint("press again!! ");
 5ec:	7e dd       	rcall	.-1284   	; 0xea <lcdInit>
 5ee:	8d e0       	ldi	r24, 0x0D	; 13
 5f0:	91 e0       	ldi	r25, 0x01	; 1
 5f2:	9d dd       	rcall	.-1222   	; 0x12e <lcdPrint>
							for (int i =4; i<8;i++)
 5f4:	24 e0       	ldi	r18, 0x04	; 4
 5f6:	30 e0       	ldi	r19, 0x00	; 0
							{
								PORTC &= ~(1 << i);
 5f8:	0e c0       	rjmp	.+28     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 5fa:	45 b3       	in	r20, 0x15	; 21
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	02 2e       	mov	r0, r18
 602:	02 c0       	rjmp	.+4      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 604:	88 0f       	add	r24, r24
 606:	99 1f       	adc	r25, r25
 608:	0a 94       	dec	r0
 60a:	e2 f7       	brpl	.-8      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
						else	{
							lcdData('9');
						_delay_ms(5000);
						lcdInit();
						lcdPrint("press again!! ");
							for (int i =4; i<8;i++)
 60c:	80 95       	com	r24
 60e:	84 23       	and	r24, r20
 610:	85 bb       	out	0x15, r24	; 21
 612:	2f 5f       	subi	r18, 0xFF	; 255
 614:	3f 4f       	sbci	r19, 0xFF	; 255
 616:	28 30       	cpi	r18, 0x08	; 8
								PORTC &= ~(1 << i);
							}
						}
					}
					else	{
						lcdData('8');
 618:	31 05       	cpc	r19, r1
 61a:	7c f3       	brlt	.-34     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 61c:	d6 cd       	rjmp	.-1108   	; 0x1ca <main+0x6c>
 61e:	88 e3       	ldi	r24, 0x38	; 56
 620:	80 dd       	rcall	.-1280   	; 0x122 <lcdData>
 622:	2f e3       	ldi	r18, 0x3F	; 63
 624:	82 e4       	ldi	r24, 0x42	; 66
 626:	9f e0       	ldi	r25, 0x0F	; 15
 628:	21 50       	subi	r18, 0x01	; 1
 62a:	80 40       	sbci	r24, 0x00	; 0
 62c:	90 40       	sbci	r25, 0x00	; 0
 62e:	e1 f7       	brne	.-8      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
						_delay_ms(5000);
						lcdInit();
 630:	00 c0       	rjmp	.+0      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 632:	00 00       	nop
						lcdPrint("press again!! ");
 634:	5a dd       	rcall	.-1356   	; 0xea <lcdInit>
 636:	8d e0       	ldi	r24, 0x0D	; 13
 638:	91 e0       	ldi	r25, 0x01	; 1
						for (int i =4; i<8;i++)
 63a:	79 dd       	rcall	.-1294   	; 0x12e <lcdPrint>
 63c:	24 e0       	ldi	r18, 0x04	; 4
 63e:	30 e0       	ldi	r19, 0x00	; 0
						{
							PORTC &= ~(1 << i);
 640:	0e c0       	rjmp	.+28     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 642:	45 b3       	in	r20, 0x15	; 21
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	02 2e       	mov	r0, r18
 64a:	02 c0       	rjmp	.+4      	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 64c:	88 0f       	add	r24, r24
 64e:	99 1f       	adc	r25, r25
 650:	0a 94       	dec	r0
 652:	e2 f7       	brpl	.-8      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
					else	{
						lcdData('8');
						_delay_ms(5000);
						lcdInit();
						lcdPrint("press again!! ");
						for (int i =4; i<8;i++)
 654:	80 95       	com	r24
 656:	84 23       	and	r24, r20
 658:	85 bb       	out	0x15, r24	; 21
 65a:	2f 5f       	subi	r18, 0xFF	; 255
							PORTC &= ~(1 << i);
						}
					}
				}
				else	{
					lcdData('7');
 65c:	3f 4f       	sbci	r19, 0xFF	; 255
 65e:	28 30       	cpi	r18, 0x08	; 8
 660:	31 05       	cpc	r19, r1
 662:	7c f3       	brlt	.-34     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 664:	b2 cd       	rjmp	.-1180   	; 0x1ca <main+0x6c>
 666:	87 e3       	ldi	r24, 0x37	; 55
 668:	5c dd       	rcall	.-1352   	; 0x122 <lcdData>
 66a:	2f e3       	ldi	r18, 0x3F	; 63
 66c:	82 e4       	ldi	r24, 0x42	; 66
 66e:	9f e0       	ldi	r25, 0x0F	; 15
					_delay_ms(5000);
					lcdInit();
 670:	21 50       	subi	r18, 0x01	; 1
					lcdPrint("press again!! ");
 672:	80 40       	sbci	r24, 0x00	; 0
 674:	90 40       	sbci	r25, 0x00	; 0
 676:	e1 f7       	brne	.-8      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
					for (int i =4; i<8;i++)
 678:	00 c0       	rjmp	.+0      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 67a:	00 00       	nop
 67c:	36 dd       	rcall	.-1428   	; 0xea <lcdInit>
					{
						PORTC &= ~(1 << i);
 67e:	8d e0       	ldi	r24, 0x0D	; 13
 680:	91 e0       	ldi	r25, 0x01	; 1
 682:	55 dd       	rcall	.-1366   	; 0x12e <lcdPrint>
 684:	24 e0       	ldi	r18, 0x04	; 4
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	0e c0       	rjmp	.+28     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 68a:	45 b3       	in	r20, 0x15	; 21
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	02 2e       	mov	r0, r18
 692:	02 c0       	rjmp	.+4      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 694:	88 0f       	add	r24, r24
				else	{
					lcdData('7');
					_delay_ms(5000);
					lcdInit();
					lcdPrint("press again!! ");
					for (int i =4; i<8;i++)
 696:	99 1f       	adc	r25, r25
 698:	0a 94       	dec	r0
 69a:	e2 f7       	brpl	.-8      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 69c:	80 95       	com	r24
 69e:	84 23       	and	r24, r20
 6a0:	85 bb       	out	0x15, r24	; 21
					}
				}
				}
			}
			else	{
				if (gpio_read_pin(PORTC_ID,3)==1){
 6a2:	2f 5f       	subi	r18, 0xFF	; 255
 6a4:	3f 4f       	sbci	r19, 0xFF	; 255
 6a6:	28 30       	cpi	r18, 0x08	; 8
 6a8:	31 05       	cpc	r19, r1
 6aa:	7c f3       	brlt	.-34     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 6ac:	8e cd       	rjmp	.-1252   	; 0x1ca <main+0x6c>
				 if (gpio_read_pin(PORTC_ID, 2)==1){
 6ae:	63 e0       	ldi	r22, 0x03	; 3
 6b0:	82 e0       	ldi	r24, 0x02	; 2
 6b2:	a8 d0       	rcall	.+336    	; 0x804 <gpio_read_pin>
 6b4:	81 30       	cpi	r24, 0x01	; 1
 6b6:	09 f0       	breq	.+2      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6b8:	81 c0       	rjmp	.+258    	; 0x7bc <__LOCK_REGION_LENGTH__+0x3bc>
					if (gpio_read_pin(PORTC_ID, 1)==1){
 6ba:	62 e0       	ldi	r22, 0x02	; 2
 6bc:	82 e0       	ldi	r24, 0x02	; 2
 6be:	a2 d0       	rcall	.+324    	; 0x804 <gpio_read_pin>
 6c0:	81 30       	cpi	r24, 0x01	; 1
 6c2:	09 f0       	breq	.+2      	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
 6c4:	57 c0       	rjmp	.+174    	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
						if (gpio_read_pin(PORTC_ID, 0)==1){
 6c6:	61 e0       	ldi	r22, 0x01	; 1
 6c8:	82 e0       	ldi	r24, 0x02	; 2
 6ca:	9c d0       	rcall	.+312    	; 0x804 <gpio_read_pin>
 6cc:	81 30       	cpi	r24, 0x01	; 1
 6ce:	71 f5       	brne	.+92     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 6d0:	60 e0       	ldi	r22, 0x00	; 0
							lcdCmd(DISPLAY_ON_CURSOR_BLINKING);
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	97 d0       	rcall	.+302    	; 0x804 <gpio_read_pin>
 6d6:	81 30       	cpi	r24, 0x01	; 1
							lcdCmd(FORCE_CURSOR_BEGINNING_FIRST_LINE);
 6d8:	29 f4       	brne	.+10     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6da:	8e e0       	ldi	r24, 0x0E	; 14
 6dc:	00 dd       	rcall	.-1536   	; 0xde <lcdCmd>
 6de:	80 e8       	ldi	r24, 0x80	; 128
						}
						else	{
							lcdData('D');
 6e0:	fe dc       	rcall	.-1540   	; 0xde <lcdCmd>
 6e2:	73 cd       	rjmp	.-1306   	; 0x1ca <main+0x6c>
 6e4:	84 e4       	ldi	r24, 0x44	; 68
 6e6:	1d dd       	rcall	.-1478   	; 0x122 <lcdData>
 6e8:	2f e3       	ldi	r18, 0x3F	; 63
 6ea:	82 e4       	ldi	r24, 0x42	; 66
 6ec:	9f e0       	ldi	r25, 0x0F	; 15
 6ee:	21 50       	subi	r18, 0x01	; 1
 6f0:	80 40       	sbci	r24, 0x00	; 0
 6f2:	90 40       	sbci	r25, 0x00	; 0
 6f4:	e1 f7       	brne	.-8      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
							_delay_ms(5000);
							lcdInit();
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
							lcdPrint("press again!! ");
 6f8:	00 00       	nop
 6fa:	f7 dc       	rcall	.-1554   	; 0xea <lcdInit>
 6fc:	8d e0       	ldi	r24, 0x0D	; 13
							for (int i =4; i<8;i++)
 6fe:	91 e0       	ldi	r25, 0x01	; 1
 700:	16 dd       	rcall	.-1492   	; 0x12e <lcdPrint>
 702:	24 e0       	ldi	r18, 0x04	; 4
							{
								PORTC &= ~(1 << i);
 704:	30 e0       	ldi	r19, 0x00	; 0
 706:	0e c0       	rjmp	.+28     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
 708:	45 b3       	in	r20, 0x15	; 21
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 2e       	mov	r0, r18
 710:	02 c0       	rjmp	.+4      	; 0x716 <__LOCK_REGION_LENGTH__+0x316>
 712:	88 0f       	add	r24, r24
 714:	99 1f       	adc	r25, r25
 716:	0a 94       	dec	r0
 718:	e2 f7       	brpl	.-8      	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 71a:	80 95       	com	r24
						else	{
							lcdData('D');
							_delay_ms(5000);
							lcdInit();
							lcdPrint("press again!! ");
							for (int i =4; i<8;i++)
 71c:	84 23       	and	r24, r20
 71e:	85 bb       	out	0x15, r24	; 21
 720:	2f 5f       	subi	r18, 0xFF	; 255
 722:	3f 4f       	sbci	r19, 0xFF	; 255
 724:	28 30       	cpi	r18, 0x08	; 8
 726:	31 05       	cpc	r19, r1
								PORTC &= ~(1 << i);
							}
						}
					}
					else	{
						lcdData('#');
 728:	7c f3       	brlt	.-34     	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 72a:	4f cd       	rjmp	.-1378   	; 0x1ca <main+0x6c>
 72c:	83 e2       	ldi	r24, 0x23	; 35
 72e:	f9 dc       	rcall	.-1550   	; 0x122 <lcdData>
 730:	2f e3       	ldi	r18, 0x3F	; 63
 732:	82 e4       	ldi	r24, 0x42	; 66
 734:	9f e0       	ldi	r25, 0x0F	; 15
 736:	21 50       	subi	r18, 0x01	; 1
 738:	80 40       	sbci	r24, 0x00	; 0
 73a:	90 40       	sbci	r25, 0x00	; 0
						_delay_ms(5000);
						lcdInit();
 73c:	e1 f7       	brne	.-8      	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
						lcdPrint("press again!! ");
 73e:	00 c0       	rjmp	.+0      	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 740:	00 00       	nop
 742:	d3 dc       	rcall	.-1626   	; 0xea <lcdInit>
 744:	8d e0       	ldi	r24, 0x0D	; 13
						for (int i =4; i<8;i++)
 746:	91 e0       	ldi	r25, 0x01	; 1
 748:	f2 dc       	rcall	.-1564   	; 0x12e <lcdPrint>
 74a:	24 e0       	ldi	r18, 0x04	; 4
						{
							PORTC &= ~(1 << i);
 74c:	30 e0       	ldi	r19, 0x00	; 0
 74e:	0e c0       	rjmp	.+28     	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 750:	45 b3       	in	r20, 0x15	; 21
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	02 2e       	mov	r0, r18
 758:	02 c0       	rjmp	.+4      	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 75a:	88 0f       	add	r24, r24
 75c:	99 1f       	adc	r25, r25
 75e:	0a 94       	dec	r0
 760:	e2 f7       	brpl	.-8      	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 762:	80 95       	com	r24
					else	{
						lcdData('#');
						_delay_ms(5000);
						lcdInit();
						lcdPrint("press again!! ");
						for (int i =4; i<8;i++)
 764:	84 23       	and	r24, r20
 766:	85 bb       	out	0x15, r24	; 21
 768:	2f 5f       	subi	r18, 0xFF	; 255
 76a:	3f 4f       	sbci	r19, 0xFF	; 255
 76c:	28 30       	cpi	r18, 0x08	; 8
 76e:	31 05       	cpc	r19, r1
							PORTC &= ~(1 << i);
						}
					}
				}
				else	{
					lcdData('0');
 770:	7c f3       	brlt	.-34     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 772:	2b cd       	rjmp	.-1450   	; 0x1ca <main+0x6c>
 774:	80 e3       	ldi	r24, 0x30	; 48
 776:	d5 dc       	rcall	.-1622   	; 0x122 <lcdData>
 778:	2f e3       	ldi	r18, 0x3F	; 63
 77a:	82 e4       	ldi	r24, 0x42	; 66
 77c:	9f e0       	ldi	r25, 0x0F	; 15
 77e:	21 50       	subi	r18, 0x01	; 1
 780:	80 40       	sbci	r24, 0x00	; 0
 782:	90 40       	sbci	r25, 0x00	; 0
 784:	e1 f7       	brne	.-8      	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
 786:	00 c0       	rjmp	.+0      	; 0x788 <__LOCK_REGION_LENGTH__+0x388>
					_delay_ms(5000);
					lcdInit();
 788:	00 00       	nop
 78a:	af dc       	rcall	.-1698   	; 0xea <lcdInit>
					lcdPrint("press again!! ");
 78c:	8d e0       	ldi	r24, 0x0D	; 13
 78e:	91 e0       	ldi	r25, 0x01	; 1
 790:	ce dc       	rcall	.-1636   	; 0x12e <lcdPrint>
 792:	24 e0       	ldi	r18, 0x04	; 4
					for (int i =4; i<8;i++)
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	0e c0       	rjmp	.+28     	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
 798:	45 b3       	in	r20, 0x15	; 21
					{
						PORTC &= ~(1 << i);
 79a:	81 e0       	ldi	r24, 0x01	; 1
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	02 2e       	mov	r0, r18
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
 7a2:	88 0f       	add	r24, r24
 7a4:	99 1f       	adc	r25, r25
 7a6:	0a 94       	dec	r0
 7a8:	e2 f7       	brpl	.-8      	; 0x7a2 <__LOCK_REGION_LENGTH__+0x3a2>
 7aa:	80 95       	com	r24
 7ac:	84 23       	and	r24, r20
 7ae:	85 bb       	out	0x15, r24	; 21
 7b0:	2f 5f       	subi	r18, 0xFF	; 255
				else	{
					lcdData('0');
					_delay_ms(5000);
					lcdInit();
					lcdPrint("press again!! ");
					for (int i =4; i<8;i++)
 7b2:	3f 4f       	sbci	r19, 0xFF	; 255
 7b4:	28 30       	cpi	r18, 0x08	; 8
 7b6:	31 05       	cpc	r19, r1
 7b8:	7c f3       	brlt	.-34     	; 0x798 <__LOCK_REGION_LENGTH__+0x398>
 7ba:	07 cd       	rjmp	.-1522   	; 0x1ca <main+0x6c>
 7bc:	8a e2       	ldi	r24, 0x2A	; 42
						PORTC &= ~(1 << i);
					}
				}
			}
			else	{
				lcdData('*');
 7be:	b1 dc       	rcall	.-1694   	; 0x122 <lcdData>
 7c0:	2f e3       	ldi	r18, 0x3F	; 63
 7c2:	82 e4       	ldi	r24, 0x42	; 66
 7c4:	9f e0       	ldi	r25, 0x0F	; 15
 7c6:	21 50       	subi	r18, 0x01	; 1
 7c8:	80 40       	sbci	r24, 0x00	; 0
 7ca:	90 40       	sbci	r25, 0x00	; 0
 7cc:	e1 f7       	brne	.-8      	; 0x7c6 <__LOCK_REGION_LENGTH__+0x3c6>
 7ce:	00 c0       	rjmp	.+0      	; 0x7d0 <__LOCK_REGION_LENGTH__+0x3d0>
 7d0:	00 00       	nop
 7d2:	8b dc       	rcall	.-1770   	; 0xea <lcdInit>
 7d4:	8d e0       	ldi	r24, 0x0D	; 13
				_delay_ms(5000);
				lcdInit();
 7d6:	91 e0       	ldi	r25, 0x01	; 1
 7d8:	aa dc       	rcall	.-1708   	; 0x12e <lcdPrint>
				lcdPrint("press again!! ");
 7da:	24 e0       	ldi	r18, 0x04	; 4
 7dc:	30 e0       	ldi	r19, 0x00	; 0
 7de:	0e c0       	rjmp	.+28     	; 0x7fc <__LOCK_REGION_LENGTH__+0x3fc>
 7e0:	45 b3       	in	r20, 0x15	; 21
				for (int i =4; i<8;i++)
 7e2:	81 e0       	ldi	r24, 0x01	; 1
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	02 2e       	mov	r0, r18
				{
					PORTC &= ~(1 << i);
 7e8:	02 c0       	rjmp	.+4      	; 0x7ee <__LOCK_REGION_LENGTH__+0x3ee>
 7ea:	88 0f       	add	r24, r24
 7ec:	99 1f       	adc	r25, r25
 7ee:	0a 94       	dec	r0
 7f0:	e2 f7       	brpl	.-8      	; 0x7ea <__LOCK_REGION_LENGTH__+0x3ea>
 7f2:	80 95       	com	r24
 7f4:	84 23       	and	r24, r20
 7f6:	85 bb       	out	0x15, r24	; 21
 7f8:	2f 5f       	subi	r18, 0xFF	; 255
 7fa:	3f 4f       	sbci	r19, 0xFF	; 255
 7fc:	28 30       	cpi	r18, 0x08	; 8
 7fe:	31 05       	cpc	r19, r1
			else	{
				lcdData('*');
				_delay_ms(5000);
				lcdInit();
				lcdPrint("press again!! ");
				for (int i =4; i<8;i++)
 800:	7c f3       	brlt	.-34     	; 0x7e0 <__LOCK_REGION_LENGTH__+0x3e0>
 802:	e3 cc       	rjmp	.-1594   	; 0x1ca <main+0x6c>

00000804 <gpio_read_pin>:
 804:	82 30       	cpi	r24, 0x02	; 2
 806:	b9 f1       	breq	.+110    	; 0x876 <gpio_read_pin+0x72>
 808:	28 f4       	brcc	.+10     	; 0x814 <gpio_read_pin+0x10>
 80a:	88 23       	and	r24, r24
	}
}

// Read the state of the specified pin of the given port
uint8_t gpio_read_pin(PORT_ID port, uint8_t pin) {
	switch(port) {
 80c:	61 f0       	breq	.+24     	; 0x826 <gpio_read_pin+0x22>
 80e:	81 30       	cpi	r24, 0x01	; 1
 810:	f1 f0       	breq	.+60     	; 0x84e <gpio_read_pin+0x4a>
 812:	81 c0       	rjmp	.+258    	; 0x916 <gpio_read_pin+0x112>
 814:	84 30       	cpi	r24, 0x04	; 4
 816:	09 f4       	brne	.+2      	; 0x81a <gpio_read_pin+0x16>
 818:	56 c0       	rjmp	.+172    	; 0x8c6 <gpio_read_pin+0xc2>
 81a:	08 f4       	brcc	.+2      	; 0x81e <gpio_read_pin+0x1a>
 81c:	40 c0       	rjmp	.+128    	; 0x89e <gpio_read_pin+0x9a>
 81e:	85 30       	cpi	r24, 0x05	; 5
 820:	09 f4       	brne	.+2      	; 0x824 <gpio_read_pin+0x20>
 822:	65 c0       	rjmp	.+202    	; 0x8ee <gpio_read_pin+0xea>
 824:	78 c0       	rjmp	.+240    	; 0x916 <gpio_read_pin+0x112>
		case PORTA_ID:
		return READ_BIT(PINA, pin);  // Read the pin of PORTA
 826:	49 b3       	in	r20, 0x19	; 25
 828:	81 e0       	ldi	r24, 0x01	; 1
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	9c 01       	movw	r18, r24
 82e:	06 2e       	mov	r0, r22
 830:	02 c0       	rjmp	.+4      	; 0x836 <gpio_read_pin+0x32>
 832:	22 0f       	add	r18, r18
 834:	33 1f       	adc	r19, r19
 836:	0a 94       	dec	r0
 838:	e2 f7       	brpl	.-8      	; 0x832 <gpio_read_pin+0x2e>
 83a:	84 2f       	mov	r24, r20
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	82 23       	and	r24, r18
 840:	93 23       	and	r25, r19
 842:	02 c0       	rjmp	.+4      	; 0x848 <gpio_read_pin+0x44>
 844:	95 95       	asr	r25
 846:	87 95       	ror	r24
 848:	6a 95       	dec	r22
 84a:	e2 f7       	brpl	.-8      	; 0x844 <gpio_read_pin+0x40>
 84c:	08 95       	ret
		case PORTB_ID:
		return READ_BIT(PINB, pin);  // Read the pin of PORTB
 84e:	46 b3       	in	r20, 0x16	; 22
 850:	81 e0       	ldi	r24, 0x01	; 1
 852:	90 e0       	ldi	r25, 0x00	; 0
 854:	9c 01       	movw	r18, r24
 856:	06 2e       	mov	r0, r22
 858:	02 c0       	rjmp	.+4      	; 0x85e <gpio_read_pin+0x5a>
 85a:	22 0f       	add	r18, r18
 85c:	33 1f       	adc	r19, r19
 85e:	0a 94       	dec	r0
 860:	e2 f7       	brpl	.-8      	; 0x85a <gpio_read_pin+0x56>
 862:	84 2f       	mov	r24, r20
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	82 23       	and	r24, r18
 868:	93 23       	and	r25, r19
 86a:	02 c0       	rjmp	.+4      	; 0x870 <gpio_read_pin+0x6c>
 86c:	95 95       	asr	r25
 86e:	87 95       	ror	r24
 870:	6a 95       	dec	r22
 872:	e2 f7       	brpl	.-8      	; 0x86c <gpio_read_pin+0x68>
 874:	08 95       	ret
		case PORTC_ID:
		return READ_BIT(PINC, pin);  // Read the pin of PORTC
 876:	43 b3       	in	r20, 0x13	; 19
 878:	81 e0       	ldi	r24, 0x01	; 1
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	9c 01       	movw	r18, r24
 87e:	06 2e       	mov	r0, r22
 880:	02 c0       	rjmp	.+4      	; 0x886 <gpio_read_pin+0x82>
 882:	22 0f       	add	r18, r18
 884:	33 1f       	adc	r19, r19
 886:	0a 94       	dec	r0
 888:	e2 f7       	brpl	.-8      	; 0x882 <gpio_read_pin+0x7e>
 88a:	84 2f       	mov	r24, r20
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	82 23       	and	r24, r18
 890:	93 23       	and	r25, r19
 892:	02 c0       	rjmp	.+4      	; 0x898 <gpio_read_pin+0x94>
 894:	95 95       	asr	r25
 896:	87 95       	ror	r24
 898:	6a 95       	dec	r22
 89a:	e2 f7       	brpl	.-8      	; 0x894 <gpio_read_pin+0x90>
 89c:	08 95       	ret
		case PORTD_ID:
		return READ_BIT(PIND, pin);  // Read the pin of PORTD
 89e:	40 b3       	in	r20, 0x10	; 16
 8a0:	81 e0       	ldi	r24, 0x01	; 1
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	9c 01       	movw	r18, r24
 8a6:	06 2e       	mov	r0, r22
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <gpio_read_pin+0xaa>
 8aa:	22 0f       	add	r18, r18
 8ac:	33 1f       	adc	r19, r19
 8ae:	0a 94       	dec	r0
 8b0:	e2 f7       	brpl	.-8      	; 0x8aa <gpio_read_pin+0xa6>
 8b2:	84 2f       	mov	r24, r20
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	82 23       	and	r24, r18
 8b8:	93 23       	and	r25, r19
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <gpio_read_pin+0xbc>
 8bc:	95 95       	asr	r25
 8be:	87 95       	ror	r24
 8c0:	6a 95       	dec	r22
 8c2:	e2 f7       	brpl	.-8      	; 0x8bc <gpio_read_pin+0xb8>
 8c4:	08 95       	ret
		case PORTE_ID:
		return READ_BIT(PINE, pin);  // Read the pin of PORTE
 8c6:	41 b1       	in	r20, 0x01	; 1
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	9c 01       	movw	r18, r24
 8ce:	06 2e       	mov	r0, r22
 8d0:	02 c0       	rjmp	.+4      	; 0x8d6 <gpio_read_pin+0xd2>
 8d2:	22 0f       	add	r18, r18
 8d4:	33 1f       	adc	r19, r19
 8d6:	0a 94       	dec	r0
 8d8:	e2 f7       	brpl	.-8      	; 0x8d2 <gpio_read_pin+0xce>
 8da:	84 2f       	mov	r24, r20
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	82 23       	and	r24, r18
 8e0:	93 23       	and	r25, r19
 8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <gpio_read_pin+0xe4>
 8e4:	95 95       	asr	r25
 8e6:	87 95       	ror	r24
 8e8:	6a 95       	dec	r22
 8ea:	e2 f7       	brpl	.-8      	; 0x8e4 <gpio_read_pin+0xe0>
 8ec:	08 95       	ret
		case PORTF_ID:
		return READ_BIT(PINF, pin);  // Read the pin of PORTF
 8ee:	40 b1       	in	r20, 0x00	; 0
 8f0:	81 e0       	ldi	r24, 0x01	; 1
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	9c 01       	movw	r18, r24
 8f6:	06 2e       	mov	r0, r22
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <gpio_read_pin+0xfa>
 8fa:	22 0f       	add	r18, r18
 8fc:	33 1f       	adc	r19, r19
 8fe:	0a 94       	dec	r0
 900:	e2 f7       	brpl	.-8      	; 0x8fa <gpio_read_pin+0xf6>
 902:	84 2f       	mov	r24, r20
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	82 23       	and	r24, r18
 908:	93 23       	and	r25, r19
 90a:	02 c0       	rjmp	.+4      	; 0x910 <gpio_read_pin+0x10c>
 90c:	95 95       	asr	r25
 90e:	87 95       	ror	r24
 910:	6a 95       	dec	r22
 912:	e2 f7       	brpl	.-8      	; 0x90c <gpio_read_pin+0x108>
 914:	08 95       	ret
		default:
		return ERROR;  // Return 0xEE for invalid port
 916:	8e ee       	ldi	r24, 0xEE	; 238
	}
}
 918:	08 95       	ret

0000091a <_exit>:
 91a:	f8 94       	cli

0000091c <__stop_program>:
 91c:	ff cf       	rjmp	.-2      	; 0x91c <__stop_program>
